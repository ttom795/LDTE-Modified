"use strict";
var events_1 = require("events");
var device_1 = require("./device");
var usb = require("./bindings");
if (usb.INIT_ERROR) {
    /* eslint-disable no-console */
    console.warn('Failed to initialize libusb.');
}
Object.setPrototypeOf(usb, events_1.EventEmitter.prototype);
Object.getOwnPropertyNames(device_1.ExtendedDevice.prototype).forEach(function (name) {
    Object.defineProperty(usb.Device.prototype, name, Object.getOwnPropertyDescriptor(device_1.ExtendedDevice.prototype, name) || Object.create(null));
});
usb.on('newListener', function (event) {
    if (event !== 'attach' && event !== 'detach') {
        return;
    }
    var listenerCount = usb.listenerCount('attach') + usb.listenerCount('detach');
    if (listenerCount === 0) {
        usb._enableHotplugEvents();
    }
});
usb.on('removeListener', function (event) {
    if (event !== 'attach' && event !== 'detach') {
        return;
    }
    var listenerCount = usb.listenerCount('attach') + usb.listenerCount('detach');
    if (listenerCount === 0) {
        usb._disableHotplugEvents();
    }
});
module.exports = usb;
//# sourceMappingURL=index.js.map