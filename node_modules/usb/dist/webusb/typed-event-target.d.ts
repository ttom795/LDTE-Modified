export declare class TypedEventTarget<T extends {
    [key: string]: Event;
}> implements EventTarget {
    private emitter;
    addEventListener(type: keyof T, listener: (event: T[keyof T]) => void): void;
    addEventListener(type: string, listener: (event: Event) => void): void;
    removeEventListener(type: keyof T, listener: (event: T[keyof T]) => void): void;
    removeEventListener(type: string, listener: (event: Event) => void): void;
    dispatchEvent(event: T[keyof T]): boolean;
    dispatchEvent(event: Event): boolean;
}
